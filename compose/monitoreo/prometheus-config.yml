# Configuracion personalizada
global:
  scrape_interval: 5s # Set the scrape interval to every 15 seconds. Default is every 1 minute.
  evaluation_interval: 5s # Evaluate rules every 15 seconds. The default is every 1 minute.
  # scrape_timeout is set to the global default (10s).

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          # - alertmanager:9093

# Load rules once and periodically evaluate them according to the global 'evaluation_interval'.
rule_files:
  # - "first_rules.yml"
  # - "second_rules.yml"

# A scrape configuration containing exactly one endpoint to scrape:
# Here it's Prometheus itself.
scrape_configs:
  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
  - job_name: "local"
    # Con esto monitoreamos la maquina local, principalmente para saber que funciona todo
    # En el target vamos a tener varios colectores:
    static_configs:
      - targets:
        - prometheus:9090 # prometheus

  # Con esta configuracion carga el archivo blackbox-targets.yml para obtener la lista de sitios que vamos a monitorizar, en el archivo se pone una linea para monitorizar la pagina de la siguiente forma:
  #
  # <BLACKBOX_EXPORTER_IP_PORT>:_:<MODULO>:_:<ESTADO>:_:<TIPO_IP>:_:<INSTANCIA>
  #
  # <BLACKBOX_EXPORTER_IP_PORT> -> aca va la IP/Direccion en donde corre el blackbox, si la pagina no lo tiene se debe poner la IP/Direccion de prometheus
  # <MODULO> -> Hay dos modulos: [http_2xx] para monitorizar la web y ssl / [icmp] para verificar por ping que la IP/Direccion este activa, sirve para ver IP publica y/o local
  # <ESTADO> -> Esto lo utilizo para agrupar las paginas, por ejemplo: Produccion / Pruebas / Desarrollo
  # <TIPO_IP> -> Otra etiqueta para saber que estoy monitorizando: URL - PUBLICA - PRIVADA
  # <INSTANCIA> -> Es el nombre de la INSTANCIA para saber que pagina se monitorea
  - job_name: 'monitoreo-web'
    metrics_path: /probe
    file_sd_configs: # Indicamos el path del archivo para obtener la lista de sitios que vamos a monitorizar
      - files:
        - /etc/prometheus/blackbox-targets.yml
    # Con esta configuracion renombramos los labels para organizarse mejor y obtener las estadisticas especificas.
    relabel_configs:
      # Indicamos que modulo vamos a utilizar
      - source_labels: [__address__]
        regex: '.*:_:(.*):_:.*:_:.*:_:.*'
        target_label: module
      # Etiqueta <TIPO_IP>
      - source_labels: [__address__]
        regex: '.*:_:.*:_:.*:_:(.*):_:.*'
        target_label: geohash
      # Nonbre de la pagina a monitorizar
      - source_labels: [__address__]
        regex: '.*:_:.*:_:.*:_:.*:_:(.*)'
        target_label: instance
      # Etiqueta <ESTADO>
      - source_labels: [__address__]
        regex: '.*:_:.*:_:(.*):_:.*:_:.*'
        target_label: job
      # Indicamos a blackbox exporter que modulo utilizar
      - source_labels: [module]
        target_label: __param_module
      # Indicamos a blackbox exporter la direccion a monitorizar
      - source_labels: [instance]
        target_label: __param_target
      # IP/Direccion donde corre blackbox
      - source_labels: [__address__]
        regex: '(.*):_:.*:_:.*:_:.*:_:.*'
        target_label: __address__

  # Con esta configuracion carga el archivo nodes-targets.yml para obtener la lista de sitios que vamos a monitorizar, en el archivo se pone una linea para monitorizar la pagina de la siguiente forma:
  #
  # <NODE_EXPORTER_IP_PORT>:_:<ESTADO>:_:<INSTANCIA>
  #
  # <NODE_EXPORTER_IP_PORT> -> aca va la IP/Direccion en donde corre el blackbox o cadvisor, si la pagina no lo tiene se debe poner la IP/Direccion de prometheus
  # <ESTADO> -> Esto lo utilizo para agrupar las paginas, por ejemplo: Produccion / Pruebas / Desarrollo
  # <INSTANCIA> -> Es el nombre de la INSTANCIA para saber que servidor monitorea
  - job_name: 'monitoreo-servers'
    metrics_path: /metrics
    file_sd_configs: # Indicamos el path del archivo para obtener la lista de sitios que vamos a monitorizar
      - files:
        - /etc/prometheus/nodes-targets.yml
    # Con esta configuracion renombramos los labels para organizarse mejor y obtener las estadisticas especificas.
    relabel_configs:
      # Nonbre del servidor a monitorizar
      - source_labels: [__address__]
        regex: '.*:_:.*:_:(.*)'
        target_label: instance
      # Etiqueta <ESTADO>
      - source_labels: [__address__]
        regex: '.*:_:(.*):_:.*'
        target_label: job
      # Indicamos a blackbox exporter la direccion a monitorizar
      - source_labels: [instance]
        target_label: __param_target
      # IP/Direccion donde corre blackbox
      - source_labels: [__address__]
        regex: '(.*):_:.*:_:.*'
        target_label: __address__

  # Con esta configuracion carga el archivo ssl-docker-targets.yml para obtener la lista de sitios en docker que vamos a monitorizar, en el archivo se pone una linea para monitorizar el servidor de la siguiente forma:
  #
  # <SSL_EXPORTER_IP_PORT>:_:<ESTADO>:_:<TIPO_IP>:_:<INSTANCIA>
  #
  # <SSL_EXPORTER_IP_PORT> -> aca va la IP/Direccion en donde corre el ssl-cert, si la pagina no lo tiene se debe poner la IP/Direccion de prometheus
  # <ESTADO> -> Esto lo utilizo para agrupar las paginas, por ejemplo: Produccion / Pruebas / Desarrollo
  # <DIRECCION> -> pongo la direccion de la pagina para poder mostratla en grafana
  # <INSTANCIA> -> Es el nombre de la INSTANCIA para saber que servidor monitorea
  - job_name: 'ssl-docker'
    metrics_path: /probe
    params:
      module: ["https"]
    file_sd_configs: # Indicamos el path del archivo para obtener la lista de sitios que vamos a monitorizar
      - files:
        - /etc/prometheus/ssl-docker-targets.yml
    # Con esta configuracion renombramos los labels para organizarse mejor y obtener las estadisticas especificas.
    relabel_configs:
      # Nonbre del servidor a monitorizar
      - source_labels: [__address__]
        regex: '.*:_:.*:_:.*:_:(.*)'
        target_label: instance
      # Etiqueta <DIRECCION>
      - source_labels: [__address__]
        regex: '.*:_:.*:_:(.*):_:.*'
        target_label: geohash
      # Etiqueta <ESTADO>
      - source_labels: [__address__]
        regex: '.*:_:(.*):_:.*:_:.*'
        target_label: job
      # Indicamos a blackbox exporter la direccion a monitorizar
      - source_labels: [geohash]
        target_label: __param_target
      # IP/Direccion donde corre ss-exporter
      - source_labels: [__address__]
        regex: '(.*):_:.*:_:.*:_:.*'
        target_label: __address__
