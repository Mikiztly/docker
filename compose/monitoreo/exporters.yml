# COMPROBADO
# Conjunto de servidores que funcionan para hacer monitoreo de equipos
# Creado por Mikiztly https://github.com/Mikiztly/docker/blob/main/compose/monitoreo/exporters.yml

version: '3.8'

# Le doy un nombre descriptivo al stack para saber de que se trata
name: exporters

services:
  # Stack para habilitar el monitoreo en un servidor grafana ya funcionando
  # Al igual que otros stacks esta con la configurcion de IP definida
  # Con esto vamos a obtener informacion de la maquina
  # https://github.com/prometheus/node_exporter
  # https://prometheus.io/docs/guides/node-exporter/
  node-exporter:
    container_name: node-exporter
    image: prom/node-exporter:latest
    restart: unless-stopped
    # Para que se pueda conectar tenemos que exponer el puerto
    ports:
      - '9100:9100'
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    # Le doy un nombre al stack para referirlo con NPM y le damos la red correspondiente
    hostname: node-exporter
    networks:
      lan_docker:
  # FIN node-exporter

  # Con esto vamos a obtener informacion de la pagina web que no este en docker o pas IP publica y privada
  # https://github.com/prometheus/blackbox_exporter
  # https://github.com/prometheus-community/prometheus-playground/blob/master/blackbox-exporter/docker-compose.yml
  blackbox-exporter:
    container_name: blackbox-exporter
    image: prom/blackbox-exporter:latest
    restart: unless-stopped
    # Para que se pueda conectar tenemos que exponer el puerto
    ports:
      - '9115:9115'
    # Le doy un nombre al stack para referirlo con NPM y le damos la red correspondiente
    hostname: blackbox-exporter
    networks:
      lan_docker:
  # FIN blackbox-exporter

  # Este contenedor es el que va a monitoreear docker
  # https://prometheus.io/docs/guides/cadvisor/#docker-compose-configuration
  # https://grafana.com/grafana/dashboards/893-main/
  # https://github.com/google/cadvisor
  cadvisor:
    container_name: cadvisor
    image: gcr.io/cadvisor/cadvisor #google/cadvisor:latest
    restart: unless-stopped
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    # Para que se pueda conectar tenemos que exponer el puerto
    ports:
      - '8080:8080'
    # Le doy un nombre al stack para referirlo con NPM y le damos la red correspondiente
    hostname: cadvisor
    networks:
      lan_docker:
  # FIN cadvisor

  # Este contenedor es el que va a monitoreear los certificados ssl de docker
  # https://github.com/ribbybibby/ssl_exporter
  # https://grafana.com/grafana/dashboards/11279-ssl-cerificates/
  ssl-cert:
    container_name: ssl-cert
    image: ribbybibby/ssl-exporter
    restart: unless-stopped
    ports:
      - '9219:9219'
    # Le doy un nombre al stack para referirlo con NPM y le damos la red correspondiente
    hostname: ssl-cert
    networks:
      lan_docker:
  # FIN ssl-cert

# Declaramos la red que vamos a utilizar
networks:
  # Configuracion de la red lan_docker
  lan_docker:
    external: true
